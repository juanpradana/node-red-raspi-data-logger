[
    {
        "id": "20e67b5a1296d581",
        "type": "tcp in",
        "z": "f5ffc2368251ecf5",
        "name": "",
        "server": "server",
        "host": "localhost",
        "port": "2001",
        "datamode": "single",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 130,
        "y": 820,
        "wires": [
            [
                "16e01d547cc23238",
                "7bea111ace10c0af"
            ]
        ]
    },
    {
        "id": "3b69cf92e2973beb",
        "type": "debug",
        "z": "f5ffc2368251ecf5",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 820,
        "wires": []
    },
    {
        "id": "16e01d547cc23238",
        "type": "function",
        "z": "f5ffc2368251ecf5",
        "name": "save data eddy 1",
        "func": "msg.payload = JSON.parse(msg.payload);\n\n/**\n* @param {any} filePath\n*/\nfunction fileExists(filePath) {\n    try {\n        fs.accessSync(filePath);\n        return true;\n    } catch {\n        return false;\n    }\n}\n\n/**\n* @param {number} num\n*/\nfunction addLeadingZero(num) {\n    if (num < 10) {\n        return \"0\" + num;\n    } else {\n        return num;\n    }\n}\n\nif (msg.payload.ts && msg.payload.values) {\n    let ts = { \"ts\": msg.payload.ts }\n    let values = msg.payload.values;\n    msg.payload = { ...ts, ...values }\n    msg.payload = json2csv.parse(msg.payload);\n} else {\n    const date = new Date();\n    let humanTime = { \"humanTime\": date.toISOString().slice(0, -1) + '000Z' };\n    let ts = { \"ts\": date.getTime() }\n\n    msg.payload = json2csv.parse({ ...humanTime, ...ts, ...msg.payload });\n}\n\nconst d = new Date();\nconst directoryPath = '/home/pi/Desktop/data/test_eddy1';\n\nmsg.filename = `/home/pi/Desktop/data/test_eddy1/test_eddy1_${addLeadingZero(d.getDate())}${addLeadingZero(d.getMonth() + 1)}${d.getFullYear()}.csv`;\ntry {\n    if (!fileExists(msg.filename)) {\n        const file = msg.payload;\n        const rows = file.split('\\n');\n        const rowsHeader = rows[0] + \"\\n\";\n        fs.mkdirSync(directoryPath, { recursive: true });\n        fs.writeFileSync(msg.filename, rowsHeader);\n    }\n    const file = msg.payload;\n    const rows = file.split('\\n');\n    const rowsNoHeader = rows[1] + \"\\n\";\n    fs.appendFileSync(msg.filename, rowsNoHeader);\n} catch (err) {\n    msg.errorMessange = err.message;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "json2csv",
                "module": "json2csv"
            },
            {
                "var": "fs",
                "module": "fs"
            }
        ],
        "x": 410,
        "y": 820,
        "wires": [
            [
                "3b69cf92e2973beb"
            ]
        ]
    },
    {
        "id": "7bea111ace10c0af",
        "type": "tcp out",
        "z": "f5ffc2368251ecf5",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 370,
        "y": 880,
        "wires": []
    },
    {
        "id": "5c4b65cbc52ea0b9",
        "type": "tcp in",
        "z": "f5ffc2368251ecf5",
        "name": "",
        "server": "server",
        "host": "localhost",
        "port": "2002",
        "datamode": "single",
        "datatype": "utf8",
        "newline": "",
        "topic": "",
        "trim": false,
        "base64": false,
        "tls": "",
        "x": 130,
        "y": 940,
        "wires": [
            [
                "3f7da4fbb91dc950",
                "376d2e5f0392a60d"
            ]
        ]
    },
    {
        "id": "d6be4ed294d30a3f",
        "type": "debug",
        "z": "f5ffc2368251ecf5",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 940,
        "wires": []
    },
    {
        "id": "3f7da4fbb91dc950",
        "type": "function",
        "z": "f5ffc2368251ecf5",
        "name": "save data eddy 2",
        "func": "msg.payload = JSON.parse(msg.payload);\n\n/**\n* @param {any} filePath\n*/\nfunction fileExists(filePath) {\n    try {\n        fs.accessSync(filePath);\n        return true;\n    } catch {\n        return false;\n    }\n}\n\n/**\n* @param {number} num\n*/\nfunction addLeadingZero(num) {\n    if (num < 10) {\n        return \"0\" + num;\n    } else {\n        return num;\n    }\n}\n\nif (msg.payload.ts && msg.payload.values) {\n    let ts = { \"ts\": msg.payload.ts }\n    let values = msg.payload.values;\n    msg.payload = { ...ts, ...values }\n    msg.payload = json2csv.parse(msg.payload);\n} else {\n    const date = new Date();\n    let humanTime = {\"humanTime\": date.toISOString().slice(0, -1) + '000Z'};\n    let ts = {\"ts\" : date.getTime()}\n\n    msg.payload = json2csv.parse({...humanTime, ...ts, ...msg.payload});\n}\n\nconst d = new Date();\nconst directoryPath = '/home/pi/Desktop/data/test_eddy2';\n\nmsg.filename = `/home/pi/Desktop/data/test_eddy2/test_eddy2_${addLeadingZero(d.getDate())}${addLeadingZero(d.getMonth() + 1)}${d.getFullYear()}.csv`;\ntry {\n    if (!fileExists(msg.filename)) {\n        const file = msg.payload;\n        const rows = file.split('\\n');\n        const rowsHeader = rows[0] + \"\\n\";\n        fs.mkdirSync(directoryPath, { recursive: true });\n        fs.writeFileSync(msg.filename, rowsHeader);\n    }\n    const file = msg.payload;\n    const rows = file.split('\\n');\n    const rowsNoHeader = rows[1] + \"\\n\";\n    fs.appendFileSync(msg.filename, rowsNoHeader);\n} catch (err) {\n    msg.errorMessange = err.message;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "json2csv",
                "module": "json2csv"
            },
            {
                "var": "fs",
                "module": "fs"
            },
            {
                "var": "path",
                "module": "path"
            }
        ],
        "x": 410,
        "y": 940,
        "wires": [
            [
                "d6be4ed294d30a3f"
            ]
        ]
    },
    {
        "id": "376d2e5f0392a60d",
        "type": "tcp out",
        "z": "f5ffc2368251ecf5",
        "name": "",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 370,
        "y": 1000,
        "wires": []
    }
]
